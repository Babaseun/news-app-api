{"version":3,"sources":["components/Header.js","components/Headlines.js","Redux/rest/index.js","Redux/actions/index.js","Redux/types/index.js","components/Usa.js","Redux/rest/usa.js","Redux/actions/usa.js","Redux/types/usa.js","components/Entertainment.js","components/Health.js","components/content/Content.js","components/content/Usa.js","components/content/Entertainment.js","components/content/Health.js","components/Search.js","App.js","Redux/reducers/index.js","Redux/reducers/usa.js","Redux/combineReducer/index.js","Redux/store/index.js","serviceWorker.js","index.js"],"names":["Header","className","Headlines","articles","useSelector","state","NG","headlinesNG","dispatch","useDispatch","useEffect","type","API","axios","get","then","response","payload","data","catch","err","processRequestFailedNG","console","log","map","article","index","key","src","urlToImage","alt","title","description","to","Usa","US","headlinesUSA","processRequestFailedUSA","Entertainment","useState","setarticles","Health","Content","contentID","match","params","Number","author","content","Search","usaNews","ENNews","healthNews","onClick","window","location","App","news","page","setpage","exact","path","render","component","UsaContent","EntertainmentContent","HealthContent","initialState","isLoading","errors","allReducers","combineReducers","action","middleware","thunk","store","createStore","applyMiddleware","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6596cfd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Header() {\r\n return (\r\n  <div className=\"header\">\r\n   <div>React</div>\r\n   <div>\r\n    <i className=\"fas fa-bars\"></i>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchNewsNG } from \"../Redux/rest/index\";\r\n\r\nfunction Headlines() {\r\n  const articles = useSelector((state) => state.NG.headlinesNG);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchNewsNG());\r\n  }, [dispatch]);\r\n  console.log(articles);\r\n\r\n  return (\r\n    <div className=\"headlines\">\r\n      <h1 className=\"title header-headlines\">Headlines</h1>\r\n\r\n      <div>\r\n        <div className=\"section-container\">\r\n          {articles.map((article, index) => (\r\n            <div key={index} className=\"section\">\r\n              <div className=\"img-section\">\r\n                <img\r\n                  className=\"url-img\"\r\n                  src={article.urlToImage}\r\n                  alt={article.urlToImage}\r\n                />\r\n              </div>\r\n              <div className=\"section-title\">\r\n                <h1 className=\"title\">{article.title}</h1>\r\n                <hr />\r\n              </div>\r\n              <div className=\"section-description\">\r\n                <p>\r\n                  {article.description}{\" \"}\r\n                  <Link to={`/headlines/${index}`}>Read More</Link>\r\n                </p>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Headlines;\r\n","import {\r\n  beginProcess,\r\n  processRequestFailedNG,\r\n  processRequestsNG,\r\n} from \"../actions/index\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchNewsNG = () => (dispatch) => {\r\n  dispatch(beginProcess());\r\n\r\n  const API_KEY = \"e6221e72e0ef4e0cb0b75aba9dbf4426\";\r\n  const API = `https://newsapi.org/v2/top-headlines?country=ng&apiKey=${API_KEY}`;\r\n\r\n  axios\r\n    .get(API)\r\n    .then((response) => {\r\n      dispatch(processRequestsNG(response.data.articles));\r\n    })\r\n    .catch((err) => dispatch(processRequestFailedNG(err)));\r\n};\r\n","import {\r\n BEGIN_FETCH_REQUEST,\r\n FETCH_HEADLINES_NIGERIA,\r\n ERRORS_FOR_NG\r\n} from '../types/index';\r\n\r\nexport const beginProcess = () => {\r\n return {\r\n  type: BEGIN_FETCH_REQUEST\r\n };\r\n};\r\nexport const processRequestsNG = (data) => {\r\n return {\r\n  type: FETCH_HEADLINES_NIGERIA,\r\n  payload: data\r\n };\r\n};\r\nexport const processRequestFailedNG = (err) => {\r\n return {\r\n  type: ERRORS_FOR_NG,\r\n  payload: err\r\n };\r\n};\r\n","export const BEGIN_FETCH_REQUEST = 'BEGIN_FETCH_REQUEST';\r\nexport const FETCH_HEADLINES_NIGERIA = 'FETCH_HEADLINES_NIGERIA';\r\nexport const ERRORS_FOR_NG = 'ERRORS_FOR_NG';\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchNewsUSA } from \"../Redux/rest/usa\";\r\n\r\nfunction Usa() {\r\n  const articles = useSelector((state) => state.US.headlinesUSA);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchNewsUSA());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"headlines\">\r\n      <h1 className=\"title header-headlines\">US politics</h1>\r\n\r\n      <div>\r\n        <div className=\"section-container\">\r\n          {articles.map((article, index) => (\r\n            <div key={index} className=\"section\">\r\n              <div className=\"img-section\">\r\n                <img\r\n                  className=\"url-img\"\r\n                  src={article.urlToImage}\r\n                  alt={article.urlToImage}\r\n                />\r\n              </div>\r\n              <div className=\"section-title\">\r\n                <h1 className=\"title\">{article.title}</h1>\r\n                <hr />\r\n              </div>\r\n              <div className=\"section-description\">\r\n                <p>\r\n                  {article.description}{\" \"}\r\n                  <Link to={`/us/${index}`}>Read More</Link>\r\n                </p>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Usa;\r\n","import {\r\n  beginProcess,\r\n  processRequestFailedUSA,\r\n  processRequestsUSA,\r\n} from \"../actions/usa\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchNewsUSA = () => (dispatch) => {\r\n  dispatch(beginProcess());\r\n\r\n  const API_KEY = \"e6221e72e0ef4e0cb0b75aba9dbf4426\";\r\n  const API = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`;\r\n\r\n  axios\r\n    .get(API)\r\n    .then((response) => {\r\n      dispatch(processRequestsUSA(response.data.articles));\r\n    })\r\n    .catch((err) => dispatch(processRequestFailedUSA(err)));\r\n};\r\n","import {\r\n BEGIN_FETCH_REQUEST,\r\n FETCH_HEADLINES_USA,\r\n ERRORS_FOR_USA\r\n} from '../types/usa';\r\n\r\nexport const beginProcess = () => {\r\n return {\r\n  type: BEGIN_FETCH_REQUEST\r\n };\r\n};\r\nexport const processRequestsUSA = (data) => {\r\n return {\r\n  type: FETCH_HEADLINES_USA,\r\n  payload: data\r\n };\r\n};\r\nexport const processRequestFailedUSA = (err) => {\r\n return {\r\n  type: ERRORS_FOR_USA,\r\n  payload: err\r\n };\r\n};\r\n","export const BEGIN_FETCH_REQUEST = 'BEGIN_FETCH_REQUEST';\r\nexport const FETCH_HEADLINES_USA = 'FETCH_HEADLINES_USA';\r\nexport const ERRORS_FOR_USA = 'ERRORS_FOR_USA';\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Entertainment() {\r\n  const [articles, setarticles] = useState([]);\r\n  useEffect(() => {\r\n    const API_KEY = \"e6221e72e0ef4e0cb0b75aba9dbf4426\";\r\n    const API = `https://newsapi.org/v2/top-headlines?country=us&category=entertainment&apiKey=${API_KEY}`;\r\n\r\n    axios\r\n      .get(API)\r\n      .then((response) => {\r\n        setarticles(response.data.articles);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"headlines\">\r\n      <h1 className=\"title header-headlines\">Entertainment</h1>\r\n\r\n      <div>\r\n        <div className=\"section-container\">\r\n          {articles.map((article, index) => (\r\n            <div key={index} className=\"section\">\r\n              <div className=\"img-section\">\r\n                <img\r\n                  className=\"url-img\"\r\n                  src={article.urlToImage}\r\n                  alt={article.urlToImage}\r\n                />\r\n              </div>\r\n              <div className=\"section-title\">\r\n                <h1 className=\"title\">{article.title}</h1>\r\n                <hr />\r\n              </div>\r\n              <div className=\"section-description\">\r\n                <p>\r\n                  {article.description}{\" \"}\r\n                  <Link to={`/en/${index}`}>Read More</Link>\r\n                </p>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Entertainment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Health() {\r\n  const [articles, setarticles] = useState([]);\r\n  useEffect(() => {\r\n    const API_KEY = \"e6221e72e0ef4e0cb0b75aba9dbf4426\";\r\n    const API = `https://newsapi.org/v2/top-headlines?country=us&category=health&apiKey=${API_KEY}`;\r\n\r\n    axios\r\n      .get(API)\r\n      .then((response) => {\r\n        setarticles(response.data.articles);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"headlines\">\r\n      <h1 className=\"title header-headlines\">Health</h1>\r\n\r\n      <div>\r\n        <div className=\"section-container\">\r\n          {articles.map((article, index) => (\r\n            <div key={index} className=\"section\">\r\n              <div className=\"img-section\">\r\n                <img\r\n                  className=\"url-img\"\r\n                  src={article.urlToImage}\r\n                  alt={article.urlToImage}\r\n                />\r\n              </div>\r\n              <div className=\"section-title\">\r\n                <h1 className=\"title\">{article.title}</h1>\r\n                <hr />\r\n              </div>\r\n              <div className=\"section-description\">\r\n                <p>\r\n                  {article.description}{\" \"}\r\n                  <Link to={`/health/${index}`}>Read More</Link>\r\n                </p>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Health;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Content({ match }) {\r\n const { contentID } = match.params;\r\n const [article, setarticles] = useState([]);\r\n\r\n useEffect(() => {\r\n  const API_KEY = '5bfaf80040e24d87b38a79a85168ecf7';\r\n  const API = `https://newsapi.org/v2/top-headlines?country=ng&apiKey=${API_KEY}`;\r\n\r\n  axios\r\n   .get(API)\r\n   .then((response) => {\r\n    setarticles(response.data.articles[Number(contentID)]);\r\n   })\r\n   .catch((err) => console.log(err));\r\n }, [contentID]);\r\n\r\n return (\r\n  <div className=\"details-container\">\r\n   <div className=\"details-content\">\r\n    <div>\r\n     <h1 className=\"details-title\">{article.title}</h1>\r\n    </div>\r\n    <div>\r\n     <img src={article.urlToImage} alt={article.title} />\r\n    </div>\r\n    <div>\r\n     <small>{article.author}</small>\r\n    </div>\r\n    <div>{article.content}</div>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Content;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Usa({ match }) {\r\n const { contentID } = match.params;\r\n const [article, setarticles] = useState([]);\r\n\r\n useEffect(() => {\r\n  const API_KEY = '5bfaf80040e24d87b38a79a85168ecf7';\r\n  const API = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${API_KEY}`;\r\n\r\n  axios\r\n   .get(API)\r\n   .then((response) => {\r\n    setarticles(response.data.articles[Number(contentID)]);\r\n   })\r\n   .catch((err) => console.log(err));\r\n }, [contentID]);\r\n\r\n return (\r\n  <div className=\"details-container\">\r\n   <div className=\"details-content\">\r\n    <div>\r\n     <h1 className=\"details-title\">{article.title}</h1>\r\n    </div>\r\n    <div>\r\n     <img src={article.urlToImage} alt={article.title} />\r\n    </div>\r\n    <div>\r\n     <small>{article.author}</small>\r\n    </div>\r\n    <div>{article.content}</div>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Usa;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Entertainment({ match }) {\r\n const { contentID } = match.params;\r\n const [article, setarticles] = useState([]);\r\n\r\n useEffect(() => {\r\n  const API_KEY = '5bfaf80040e24d87b38a79a85168ecf7';\r\n  const API = `https://newsapi.org/v2/top-headlines?country=us&category=entertainment&apiKey=${API_KEY}`;\r\n\r\n  axios\r\n   .get(API)\r\n   .then((response) => {\r\n    setarticles(response.data.articles[Number(contentID)]);\r\n   })\r\n   .catch((err) => console.log(err));\r\n }, [contentID]);\r\n\r\n return (\r\n  <div className=\"details-container\">\r\n   <div className=\"details-content\">\r\n    <div>\r\n     <h1 className=\"details-title\">{article.title}</h1>\r\n    </div>\r\n    <div>\r\n     <img src={article.urlToImage} alt={article.title} />\r\n    </div>\r\n    <div>\r\n     <small>{article.author}</small>\r\n    </div>\r\n    <div>{article.content}</div>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Entertainment;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Health({ match }) {\r\n const { contentID } = match.params;\r\n const [article, setarticles] = useState([]);\r\n\r\n useEffect(() => {\r\n  const API_KEY = '5bfaf80040e24d87b38a79a85168ecf7';\r\n  const API = `https://newsapi.org/v2/top-headlines?country=us&category=health&apiKey=${API_KEY}`;\r\n\r\n  axios\r\n   .get(API)\r\n   .then((response) => {\r\n    setarticles(response.data.articles[Number(contentID)]);\r\n   })\r\n   .catch((err) => console.log(err));\r\n }, [contentID]);\r\n\r\n return (\r\n  <div className=\"details-container\">\r\n   <div className=\"details-content\">\r\n    <div>\r\n     <h1 className=\"details-title\">{article.title}</h1>\r\n    </div>\r\n    <div>\r\n     <img src={article.urlToImage} alt={article.title} />\r\n    </div>\r\n    <div>\r\n     <small>{article.author}</small>\r\n    </div>\r\n    <div>{article.content}</div>\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Health;\r\n","import React from 'react';\r\n\r\nfunction Search({ usaNews, ENNews, healthNews }) {\r\n    const goHome = ()=>{\r\n        window.location = '/'\r\n    }\r\n return (\r\n  <div className=\"search\">\r\n   <div className=\"link\" onClick={goHome}>Headlines</div>\r\n\r\n   <div className=\"link\" onClick={usaNews}>\r\n    US Politics\r\n   </div>\r\n   <div className=\"link\" onClick={ENNews}>\r\n    Entertainment\r\n   </div>\r\n   <div className=\"link\" onClick={healthNews}>\r\n    Health\r\n   </div>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Headlines from './components/Headlines';\r\nimport UsaNews from './components/Usa';\r\nimport Entertainment from './components/Entertainment';\r\nimport Health from './components/Health';\r\nimport Content from './components/content/Content';\r\nimport UsaContent from './components/content/Usa';\r\nimport EntertainmentContent from './components/content/Entertainment';\r\nimport HealthContent from './components/content/Health';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Search from './components/Search';\r\n\r\nfunction App() {\r\n let news;\r\n const [page, setpage] = useState('');\r\n\r\n if (page === 'usa') {\r\n  news = <UsaNews />;\r\n } else if (page === 'en') {\r\n  news = <Entertainment />;\r\n } else if (page === 'health') {\r\n  news = <Health />;\r\n } else {\r\n  news = <Headlines />;\r\n }\r\n const usaNews = () => {\r\n  setpage('usa');\r\n };\r\n const ENNews = () => {\r\n  setpage('en');\r\n };\r\n const healthNews = () => {\r\n  setpage('health');\r\n };\r\n return (\r\n  <div>\r\n   <Header />\r\n   <Search usaNews={usaNews} ENNews={ENNews} healthNews={healthNews} />\r\n\r\n   <Router>\r\n    <Route exact path=\"/\" render={() => news} />\r\n\r\n    <Route exact path=\"/headlines/:contentID\" component={Content} />\r\n    <Route exact path=\"/us/:contentID\" component={UsaContent} />\r\n    <Route exact path=\"/en/:contentID\" component={EntertainmentContent} />\r\n    <Route exact path=\"/health/:contentID\" component={HealthContent} />\r\n   </Router>\r\n  </div>\r\n );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n isLoading: false,\r\n headlinesNG: [],\r\n errors: ''\r\n};\r\n\r\nexport const reducerNG = (state = initialState, action) => {\r\n switch (action.type) {\r\n  case 'BEGIN_FETCH_REQUEST':\r\n   return {\r\n    ...state,\r\n    isLoading: true\r\n   };\r\n  case 'FETCH_HEADLINES_NIGERIA':\r\n   return {\r\n    ...state,\r\n    isLoading: false,\r\n    headlinesNG: action.payload\r\n   };\r\n  case 'ERRORS_FOR_NG':\r\n   return {\r\n    ...state,\r\n    errors: action.payload\r\n   };\r\n\r\n  default:\r\n   return state;\r\n }\r\n};\r\n","const initialState = {\r\n isLoading: false,\r\n headlinesUSA: [],\r\n errors: ''\r\n};\r\n\r\nexport const reducerUSA = (state = initialState, action) => {\r\n switch (action.type) {\r\n  case 'BEGIN_FETCH_REQUEST':\r\n   return {\r\n    ...state,\r\n    isLoading: true\r\n   };\r\n  case 'FETCH_HEADLINES_USA':\r\n   return {\r\n    ...state,\r\n    isLoading: false,\r\n    headlinesUSA: action.payload\r\n   };\r\n  case 'ERRORS_FOR_USA':\r\n   return {\r\n    ...state,\r\n    errors: action.payload\r\n   };\r\n\r\n  default:\r\n   return state;\r\n }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { reducerNG } from '../reducers/index';\r\nimport { reducerUSA } from '../reducers/usa';\r\n\r\nconst allReducers = combineReducers({\r\n NG: reducerNG,\r\n US: reducerUSA\r\n});\r\nexport default allReducers;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport allReducers from '../combineReducer/index';\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(allReducers, applyMiddleware(...middleware));\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './Redux/store/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n <Provider store={store}>\r\n  <App />\r\n </Provider>,\r\n document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}